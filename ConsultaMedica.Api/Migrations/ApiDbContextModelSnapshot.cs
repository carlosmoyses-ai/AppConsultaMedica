// <auto-generated />
using System;
using System.Collections.Generic;
using ConsultaMedica.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsultaMedica.Api.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("ConsultaMedica.Api.Models.ConsultaModel", b =>
                {
                    b.Property<int>("ConsultaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataConsulta")
                        .HasColumnType("Data Consulta");

                    b.Property<int>("MedicoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("Observacoes");

                    b.Property<int>("PacienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecepcionistaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoConsulta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Tipo Consulta");

                    b.HasKey("ConsultaId");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.HasIndex("RecepcionistaId");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("ConsultaMedica.Api.Models.EspecialidadeModel", b =>
                {
                    b.Property<int>("EspecialidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescricaoEspecialidade")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("Descricao Especialidade");

                    b.Property<string>("EspecialidadeNome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Especialidade");

                    b.HasKey("EspecialidadeId");

                    b.ToTable("Especialidade");
                });

            modelBuilder.Entity("ConsultaMedica.Api.Models.MedicoModel", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<List<DateTime>>("HorariosAtendimento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Horarios Atendimento");

                    b.Property<string>("MedicoNome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nome");

                    b.Property<string>("NumeroRegistroProfisional")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Numero Registro Profissional");

                    b.HasKey("MedicoId");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("ConsultaMedica.Api.Models.PacienteModel", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HistoricoClinico")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Historico Clinico");

                    b.Property<string>("NumeroIdentificacao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Numero Identificacao");

                    b.Property<string>("PacienteNome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nome");

                    b.Property<string>("PacienteSobrenome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Sobrenome");

                    b.HasKey("PacienteId");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("ConsultaMedica.Api.Models.RecepcionistaModel", b =>
                {
                    b.Property<int>("RecepcionistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeroIdentificacao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Numero Identificacao");

                    b.Property<string>("NumeroTelefone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Numero Telefone");

                    b.Property<string>("RecepcionistaNome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nome");

                    b.Property<string>("RecepcionistaSobrenome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Sobrenome");

                    b.HasKey("RecepcionistaId");

                    b.ToTable("Recepcionista");
                });

            modelBuilder.Entity("MedicoEspecialidade", b =>
                {
                    b.Property<int>("MedicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EspecialidadeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MedicoId", "EspecialidadeId");

                    b.HasIndex("EspecialidadeId");

                    b.ToTable("MedicoEspecialidade");
                });

            modelBuilder.Entity("ConsultaMedica.Api.Models.ConsultaModel", b =>
                {
                    b.HasOne("ConsultaMedica.Api.Models.MedicoModel", "Medico")
                        .WithMany("Consultas")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsultaMedica.Api.Models.PacienteModel", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsultaMedica.Api.Models.RecepcionistaModel", "Recepcionista")
                        .WithMany("Consultas")
                        .HasForeignKey("RecepcionistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");

                    b.Navigation("Recepcionista");
                });

            modelBuilder.Entity("MedicoEspecialidade", b =>
                {
                    b.HasOne("ConsultaMedica.Api.Models.EspecialidadeModel", null)
                        .WithMany()
                        .HasForeignKey("EspecialidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsultaMedica.Api.Models.MedicoModel", null)
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsultaMedica.Api.Models.MedicoModel", b =>
                {
                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("ConsultaMedica.Api.Models.PacienteModel", b =>
                {
                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("ConsultaMedica.Api.Models.RecepcionistaModel", b =>
                {
                    b.Navigation("Consultas");
                });
#pragma warning restore 612, 618
        }
    }
}
